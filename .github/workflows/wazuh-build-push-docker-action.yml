# This is a basic workflow that is manually triggered
# @deprecated Official Fortishield images must be used instead: https://hub.docker.com/r/fortishield/fortishield

name: Manual workflow build and push docker image

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      build-manager-image:
        type: boolean
        description: 'Build manager image'
        required: false
      fortishield-manager-version:
        description: 'Fortishield manager version'
        default: 'v4.3.8'
        required: false
      elastic-manager-version:
        description: 'Elastic manager version'
        default: '7.17.0'
        required: false

      build-agent-image:
        type: boolean
        description: 'Build agent image'
        required: false
      fortishield-agent-version:
        description: 'Fortishield agent version'
        default: 'v4.3.8'
        required: false
      elastic-agent-version:
        description: 'Elastic manager version'
        default: '7.17.0'
        required: false

      build-cypress-image:
        type: boolean
        description: 'Build cypress image'
        required: false
      ubuntu-cypress-branch:
        description: 'Ubuntu cypress branch: Branch in which the image will be created, this branch must correspond to the fortishield-kibana-app project. It will take the tests written in the fortishield-kibana-app/test/cypress directory.'
        default: 'main'
        required: false
      image-cypress-version:
        description: 'Image cypress version'
        default: '3.0.0'
        required: false
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  job-build-manager-image:
    if: ${{ github.event.inputs.build-manager-image == 'true' }}
    name: Run build and push manager image
    runs-on: ubuntu-latest
    steps:
      - name: Step 01 - Download fortishield-kibana-app
        uses: actions/checkout@v2
        with:
          path: fortishield-kibana-app
      - name: Step 02 - Login to docker
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Step 03 - Build image
        run: |
          cd ${{ github.workspace }}/fortishield-kibana-app/test/cypress/images/fortishield_manager_filebeat_sources_cmake
          docker build -t fortishield/fortishield-manager-image:${{ github.event.inputs.fortishield-manager-version }}-${{ github.event.inputs.elastic-manager-version }} \
          --build-arg FORTISHIELD_VERSION=${{ github.event.inputs.fortishield-manager-version }} \
          --build-arg FILEBEAT_VERSION=${{ github.event.inputs.elastic-manager-version }} \
          --build-arg FILEBEAT_FORTISHIELD_TEMPLATE_URL=https://raw.githubusercontent.com/fortishield/fortishield/4.0/extensions/elasticsearch/7.x/fortishield-template.json \
          --build-arg FILEBEAT_FORTISHIELD_MODULE_URL=https://fortishield.github.io/packages/4.x/filebeat/fortishield-filebeat-0.4.tar.gz .
      - name: Step 04 - Push image to docker
        run: |
          docker push fortishield/fortishield-manager-image:${{ github.event.inputs.fortishield-manager-version }}-${{ github.event.inputs.elastic-manager-version }}

  job-build-agent-image:
    if: ${{ github.event.inputs.build-agent-image == 'true' }}
    name: Run build and push agent image
    runs-on: ubuntu-latest
    steps:
      - name: Step 01 - Download fortishield-kibana-app
        uses: actions/checkout@v2
        with:
          path: fortishield-kibana-app
      - name: Step 02 - Login to docker
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Step 03 - Build image
        run: |
          cd ${{ github.workspace }}/fortishield-kibana-app/test/cypress/images/fortishield_agent_ubuntu_sources_cmake
          docker build -t fortishield/fortishield-agent-image:${{ github.event.inputs.fortishield-agent-version }} \
          --build-arg FORTISHIELD_VERSION=${{ github.event.inputs.fortishield-agent-version }} .
      - name: Step 04 - Push image to docker
        run: |
          docker push fortishield/fortishield-agent-image:${{ github.event.inputs.fortishield-agent-version }}

  job-build-cypress-image:
    if: ${{ github.event.inputs.build-cypress-image == 'true' }}
    name: Run build and push cypress image
    runs-on: ubuntu-latest
    steps:
      - name: Step 01 - Download fortishield-kibana-app
        uses: actions/checkout@v2
        with:
          path: fortishield-kibana-app
      - name: Step 02 - Login to docker
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Step 03 - Build image
        run: |
          cd ${{ github.workspace }}/fortishield-kibana-app/test/cypress/images/ubuntu-cypress
          docker build -t fortishield/fortishield-ubuntu-cypress:${{ github.event.inputs.image-cypress-version }} \
          --build-arg UBUNTU_CYPRESS_BRANCH=${{ github.event.inputs.ubuntu-cypress-branch }} .
      - name: Step 04 - Push image to docker
        run: |
          docker push fortishield/fortishield-ubuntu-cypress:${{ github.event.inputs.image-cypress-version }}
